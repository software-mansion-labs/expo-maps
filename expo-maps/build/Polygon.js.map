{"version":3,"file":"Polygon.js","sourceRoot":"","sources":["../src/Polygon.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAkH1B;;;;;;;GAOG;AACH,MAAM,OAAO,OAAQ,SAAQ,KAAK,CAAC,SAAuB;IACxD,MAAM;QACJ,OAAO,IAAI,CAAC;IACd,CAAC;CACF","sourcesContent":["import React from 'react';\r\nimport { Point, PatternItem } from './Common.types';\r\n\r\n/**\r\n * Props of Polygon component of Expo Maps library.\r\n */\r\nexport type PolygonProps = {\r\n  /**\r\n   * Array of polygon's vertices.\r\n   *\r\n   * The polygon is closed automatically, so there is no need to repeat the first vertex at the end.\r\n   *\r\n   * If empty, the polygon will be invisible, but logically it will be registered on the host map.\r\n   * @required\r\n   */\r\n  points: Point[];\r\n  /**\r\n   * Color of the polygon's interior (optional).\r\n   *\r\n   * Accepted formats:\r\n   * * `'#RRGGBB'`\r\n   * * `'#RRGGBBAA'`\r\n   * * `'#RGB'`\r\n   * * `'#RGBA'`\r\n   * * 'red'\r\n   * * 'blue'\r\n   * * 'green'\r\n   * * 'black'\r\n   * * 'white'\r\n   * * 'gray'\r\n   * * 'cyan'\r\n   * * 'magenta'\r\n   * * 'yellow'\r\n   * * 'lightgray'\r\n   * * 'darkgray'\r\n   * * 'grey'\r\n   * * 'aqua'\r\n   * * 'fuchsia'\r\n   * * 'lime'\r\n   * * 'maroon'\r\n   * * 'navy'\r\n   * * 'olive'\r\n   * * 'purple'\r\n   * * 'silver'\r\n   * * 'teal'\r\n   * @default transparent\r\n   */\r\n  fillColor?: string;\r\n  /**\r\n   * Color of the polygon's edge line (optional).\r\n   *\r\n   * Accepted formats:\r\n   * * `'#RRGGBB'`\r\n   * * `'#RRGGBBAA'`\r\n   * * `'#RGB'`\r\n   * * `'#RGBA'`\r\n   * * 'red'\r\n   * * 'blue'\r\n   * * 'green'\r\n   * * 'black'\r\n   * * 'white'\r\n   * * 'gray'\r\n   * * 'cyan'\r\n   * * 'magenta'\r\n   * * 'yellow'\r\n   * * 'lightgray'\r\n   * * 'darkgray'\r\n   * * 'grey'\r\n   * * 'aqua'\r\n   * * 'fuchsia'\r\n   * * 'lime'\r\n   * * 'maroon'\r\n   * * 'navy'\r\n   * * 'olive'\r\n   * * 'purple'\r\n   * * 'silver'\r\n   * * 'teal'\r\n   * @default 'black'\r\n   */\r\n  strokeColor?: string;\r\n  /**\r\n   * Width of the polygon's edge line (optional).\r\n   * @default 1.0\r\n   */\r\n  strokeWidth?: number;\r\n  /**\r\n   * Array of objects of type PatternItem, specifying the pattern of the polygon's edge line (optional).\r\n   *\r\n   * * Unprovided will imply a solid line.\r\n   * * Empty array will imply no visible line.\r\n   * * Otherwise line pattern starts with first provided element and repeats.\r\n   *\r\n   * For detailed info see {@link PatternItem}\r\n   */\r\n  strokePattern?: PatternItem[];\r\n  /**\r\n   * Style of joints between polygon's line segments (optional).\r\n   * * `'bevel'` - beveled joints between line segments\r\n   * * `'miter'` - sharp joints between line segments\r\n   * * `'round'` - rounded joints between line segments\r\n   * @default 'miter'\r\n   */\r\n  jointType?: 'bevel' | 'miter' | 'round';\r\n};\r\n\r\n/**\r\n * Internal JSON object for representing polygons in Expo Maps library.\r\n *\r\n * See {@link PolygonProps} for more detail.\r\n */\r\nexport type PolygonObject = PolygonProps & {\r\n  type: 'polygon';\r\n};\r\n\r\n/**\r\n * Polygon component of Expo Maps library.\r\n *\r\n * Draws customizable polygon on ExpoMap.\r\n * This component should be ExpoMap component child to work properly.\r\n *\r\n * See {@link PolygonProps} to learn more about props.\r\n */\r\nexport class Polygon extends React.Component<PolygonProps> {\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n"]}
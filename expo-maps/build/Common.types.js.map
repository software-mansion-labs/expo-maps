{"version":3,"file":"Common.types.js","sourceRoot":"","sources":["../src/Common.types.ts"],"names":[],"mappings":"","sourcesContent":["/**\r\n * Basic point type for representing a coordinate on a map.\r\n */\r\nexport type Point = {\r\n  /**\r\n   * The latitude of the point in degrees. Use decimal degrees as opposed to degrees/minutes/seconds.\r\n   * @required\r\n   */\r\n  latitude: number;\r\n  /**\r\n   * The longitude of the point in degrees. Use decimal degrees as opposed to degrees/minutes/seconds.\r\n   * @required\r\n   */\r\n  longitude: number;\r\n};\r\n\r\n/**\r\n * Generic object that associates numerical data with a georgaphic coordinate.\r\n */\r\nexport type PointWithData = Point & {\r\n  /**\r\n   * Numerical data associated with the point. (optional)\r\n   * @default 1\r\n   */\r\n  data?: number;\r\n};\r\n\r\n/**\r\n * PatternItem is used to define a repeating pattern for polyline and polygon line.\r\n * PatternItem with type `stroke` and length 0 will represent a dot.\r\n * Use an array of PatternItem to define a pattern.\r\n */\r\nexport type PatternItem = {\r\n  /**\r\n   * The type of the pattern item.\r\n   * * `'stroke'` - rendered line segment\r\n   * * `'gap'` - transparent gap between pattern items\r\n   * @required\r\n   */\r\n  type: 'stroke' | 'gap';\r\n  /**\r\n   * Length of the pattern item in pixels.\r\n   * @required\r\n   */\r\n  length: number;\r\n};\r\n\r\nexport type Color =\r\n  | 'red'\r\n  | 'blue'\r\n  | 'green'\r\n  | 'black'\r\n  | 'white'\r\n  | 'gray'\r\n  | 'cyan'\r\n  | 'magenta'\r\n  | 'yellow'\r\n  | 'lightgray'\r\n  | 'darkgray'\r\n  | 'aqua'\r\n  | 'fuchsia'\r\n  | 'lime'\r\n  | 'maroon'\r\n  | 'navy'\r\n  | 'olive'\r\n  | 'purple'\r\n  | 'silver'\r\n  | 'teal';\r\n"]}
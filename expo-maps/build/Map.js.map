{"version":3,"file":"Map.js","sourceRoot":"","sources":["../src/Map.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  NativeExpoAppleMapsView,\n  NativeExpoGoogleMapsView,\n} from './NativeExpoMapView';\nimport {\n  DefaultNativeExpoMapViewProps,\n  ExpoMapState,\n  ExpoMapViewProps,\n} from './Map.types';\nimport { Asset } from 'expo-asset';\nimport { Platform } from 'react-native';\nimport * as Utils from './Utils';\nimport { Marker, MarkerObject } from './Marker';\nimport { PolygonObject } from './Polygon';\nimport { PolylineObject } from './Polyline';\nimport { CircleObject } from './Circle';\nimport { ClusterObject } from './Cluster';\nimport { KMLObject } from './KML';\nimport { GeoJson, GeoJsonObject } from './GeoJson';\nimport { Color } from './Common.types';\n\nexport { Marker } from './Marker';\nexport { Polygon } from './Polygon';\nexport { Polyline } from './Polyline';\nexport { Circle } from './Circle';\nexport { Cluster } from './Cluster';\nexport { KML } from './KML';\nexport { GeoJson } from './GeoJson';\n\nconst defaultNativeExpoMapViewProps: DefaultNativeExpoMapViewProps = {\n  mapType: 'normal',\n  showZoomControls: true,\n  showCompass: true,\n  showMapToolbar: true,\n  showMyLocationButton: true,\n  showLevelPicker: true,\n  enableRotateGestures: false,\n  enableScrollGestures: true,\n  enableTiltGestures: false,\n  enableZoomGestures: true,\n  initialCameraPosition: {\n    latitude: 51.51,\n    longitude: 0.13,\n    zoom: 4,\n    animate: true,\n  },\n  enableTraffic: false,\n};\n\n/**\n * Main map component of Expo Maps library.\n *\n * See {@link ExpoMapViewProps} to learn more about props.\n */\nexport class ExpoMap extends React.Component<ExpoMapViewProps> {\n  state: ExpoMapState = {\n    markers: [],\n    polygons: [],\n    polylines: [],\n    circles: [],\n    clusters: [],\n    kmls: [],\n    geojsons: [],\n  };\n  _ismounted = false;\n\n  componentDidMount() {\n    this.mapChildren();\n    this._ismounted = true;\n  }\n\n  componentWillUnmount() {\n    this._ismounted = false;\n  }\n\n  componentDidUpdate(_, prevState: ExpoMapState) {\n    if (Object.is(this.state, prevState)) {\n      this.mapChildren();\n    }\n  }\n\n  private async mapChildren() {\n    const childrenArray = React.Children.map(\n      this.props.children,\n      async (child) => {\n        if (!Utils.isSimpleType(child)) {\n          if (Utils.isMarker(child)) {\n            return buildMarkerObject(child);\n          } else if (Utils.isPolygon(child)) {\n            const polygonObject = {\n              type: 'polygon',\n              points: child.props.points,\n              fillColor: child.props.fillColor,\n              strokeColor: child.props.strokeColor,\n              strokeWidth: child.props.strokeWidth,\n              strokePattern: child.props.strokePattern,\n              jointType: child.props.jointType,\n            } as PolygonObject;\n            if (\n              polygonObject.fillColor != undefined &&\n              !Utils.isHexColor(polygonObject.fillColor)\n            ) {\n              polygonObject.fillColor = Utils.mapColorToHexColor(\n                polygonObject.fillColor as Color\n              );\n            }\n            return polygonObject;\n          } else if (Utils.isPolyline(child)) {\n            const polylineObject = {\n              type: 'polyline',\n              points: child.props.points,\n              color: child.props.color,\n              width: child.props.width,\n              pattern: child.props.pattern,\n              jointType: child.props.jointType,\n              capType: child.props.capType,\n            } as PolylineObject;\n            if (\n              polylineObject.color != undefined &&\n              !Utils.isHexColor(polylineObject.color)\n            ) {\n              polylineObject.color = Utils.mapColorToHexColor(\n                polylineObject.color as Color\n              );\n            }\n            return polylineObject;\n          } else if (Utils.isCircle(child)) {\n            return {\n              type: 'circle',\n              center: child.props.center,\n              radius: child.props.radius,\n              fillColor: child.props.fillColor,\n              strokeColor: child.props.strokeColor,\n              strokeWidth: child.props.strokeWidth,\n            } as CircleObject;\n          } else if (Utils.isKML(child)) {\n            let filePath = await Asset.fromModule(\n              child.props.filePath\n            ).downloadAsync();\n            return {\n              type: 'kml',\n              filePath: filePath.localUri,\n            } as KMLObject;\n          } else if (Utils.isGeoJson(child)) {\n            return buildGeoJsonObject(child);\n          } else if (Utils.isCluster(child)) {\n            const clusterChildrenArray = React.Children.map(\n              child.props.children,\n              async (clusterChild) => {\n                if (!Utils.isSimpleType(clusterChild)) {\n                  if (Utils.isMarker(clusterChild)) {\n                    return buildMarkerObject(clusterChild);\n                  }\n                }\n                Utils.warnIfChildIsIncompatible(clusterChild);\n                return null;\n              }\n            );\n\n            if (clusterChildrenArray != undefined) {\n              let iconPath: Asset | undefined = undefined;\n              if (child.props.icon !== undefined) {\n                iconPath = await Asset.fromModule(\n                  child.props.icon\n                ).downloadAsync();\n              }\n\n              let clusterPropObjects = await Promise.all(clusterChildrenArray);\n              var minimumClusterSize: number;\n\n              if (\n                child.props.minimumClusterSize !== undefined &&\n                child.props.minimumClusterSize > 0\n              ) {\n                minimumClusterSize = child.props.minimumClusterSize;\n              } else {\n                minimumClusterSize = 4;\n              }\n\n              let clusterObject = {\n                type: 'cluster',\n                markers: clusterPropObjects,\n                name: child.props.name,\n                minimumClusterSize: minimumClusterSize,\n                markerTitle: child.props.markerTitle,\n                markerSnippet: child.props.markerSnippet,\n                icon: iconPath?.localUri,\n                color: child.props.color,\n                opacity: child.props.opacity ? child.props.opacity : 1,\n              } as ClusterObject;\n\n              if (\n                clusterObject.color != undefined &&\n                !Utils.isHexColor(clusterObject.color)\n              ) {\n                clusterObject.color = Utils.mapColorToHexColor(\n                  clusterObject.color as Color,\n                  '#ff0000'\n                );\n              }\n              return clusterObject;\n            }\n          }\n          Utils.warnIfChildIsIncompatible(child);\n          return null;\n        }\n        Utils.warnIfChildIsIncompatible(child);\n        return null;\n      }\n    );\n\n    if (childrenArray != undefined) {\n      let propObjects = await Promise.all(childrenArray);\n      if (this._ismounted) {\n        this.setState({\n          markers: propObjects.filter((elem) => elem?.type === 'marker'),\n          polygons: propObjects.filter((elem) => elem?.type === 'polygon'),\n          polylines: propObjects.filter((elem) => elem?.type === 'polyline'),\n          circles: propObjects.filter((elem) => elem?.type === 'circle'),\n          clusters: propObjects.filter((elem) => elem?.type === 'cluster'),\n          kmls: propObjects.filter((elem) => elem?.type === 'kml'),\n          geojsons: propObjects.filter((elem) => elem?.type === 'geojson'),\n        });\n      }\n    }\n  }\n\n  render() {\n    if (Platform.OS == 'ios' && this.props.provider == 'apple') {\n      if (parseInt(Platform.Version) < 13 && this.state.geojsons.length > 0) {\n        console.warn(\n          \"Versions of iOS < 13 doesn't support GeoJSON features for Apple Maps. Adding of GeoJSON for these versions will be omitted.\"\n        );\n      }\n      return (\n        <NativeExpoAppleMapsView\n          {...defaultNativeExpoMapViewProps}\n          {...this.props}\n          markers={this.state.markers}\n          polygons={this.state.polygons}\n          polylines={this.state.polylines}\n          circles={this.state.circles}\n          clusters={this.state.clusters}\n          kmls={this.state.kmls}\n          geojsons={this.state.geojsons}\n        />\n      );\n    }\n\n    return (\n      <NativeExpoGoogleMapsView\n        {...defaultNativeExpoMapViewProps}\n        {...this.props}\n        googleMapsJsonStyleString={\n          this.props.googleMapsJsonStyleString\n            ? this.props.googleMapsJsonStyleString\n            : ''\n        }\n        markers={this.state.markers}\n        polygons={this.state.polygons}\n        polylines={this.state.polylines}\n        circles={this.state.circles}\n        clusters={this.state.clusters}\n        kmls={this.state.kmls}\n        geojsons={this.state.geojsons}\n      />\n    );\n  }\n}\n\nfunction buildGeoJsonObject(child: GeoJson): GeoJsonObject {\n  if (\n    child.props.defaultStyle?.marker?.color != undefined &&\n    !Utils.isHexColor(child.props.defaultStyle.marker.color)\n  ) {\n    child.props.defaultStyle.marker.color = Utils.mapColorToHexColor(\n      child.props.defaultStyle?.marker.color as Color,\n      '#ff0000'\n    );\n  }\n\n  if (\n    child.props.defaultStyle?.polygon?.fillColor != undefined &&\n    !Utils.isHexColor(child.props.defaultStyle.polygon.fillColor)\n  ) {\n    child.props.defaultStyle.polygon.fillColor = Utils.mapColorToHexColor(\n      child.props.defaultStyle.polygon.fillColor as Color\n    );\n  }\n\n  if (\n    child.props.defaultStyle?.polygon?.strokeColor != undefined &&\n    !Utils.isHexColor(child.props.defaultStyle.polygon.strokeColor)\n  ) {\n    child.props.defaultStyle.polygon.strokeColor = Utils.mapColorToHexColor(\n      child.props.defaultStyle.polygon.strokeColor as Color\n    );\n  }\n\n  if (\n    child.props.defaultStyle?.polyline?.color != undefined &&\n    !Utils.isHexColor(child.props.defaultStyle.polyline.color)\n  ) {\n    child.props.defaultStyle.polyline.color = Utils.mapColorToHexColor(\n      child.props.defaultStyle.polyline.color as Color\n    );\n  }\n\n  return {\n    type: 'geojson',\n    geoJsonString: child.props.geoJsonString,\n    defaultStyle: child.props.defaultStyle,\n  } as GeoJsonObject;\n}\n\nasync function buildMarkerObject(child: Marker): Promise<MarkerObject> {\n  let iconPath: Asset | undefined = undefined;\n  if (child.props.icon !== undefined) {\n    iconPath = await Asset.fromModule(child.props.icon).downloadAsync();\n  }\n\n  let markerObject = {\n    type: 'marker',\n    latitude: child.props.latitude,\n    longitude: child.props.longitude,\n    markerTitle: child.props.markerTitle,\n    markerSnippet: child.props.markerSnippet,\n    icon: iconPath?.localUri,\n    color: child.props.color,\n    draggable: child.props.draggable ? child.props.draggable : false,\n    anchorU: child.props.anchorU,\n    anchorV: child.props.anchorV,\n    opacity: child.props.opacity ? child.props.opacity : 1,\n  } as MarkerObject;\n\n  if (\n    markerObject.color != undefined &&\n    !Utils.isHexColor(markerObject.color)\n  ) {\n    markerObject.color = Utils.mapColorToHexColor(\n      markerObject.color as Color,\n      '#ff0000'\n    );\n  }\n  return markerObject;\n}\n"]}
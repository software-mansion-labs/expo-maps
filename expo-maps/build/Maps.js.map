{"version":3,"file":"Maps.js","sourceRoot":"","sources":["../src/Maps.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ExpoMapViewProps, MarkerProps, MarkerObject } from './Maps.types';\r\nimport {\r\n  NativeExpoAppleMapsView,\r\n  NativeExpoGoogleMapsView,\r\n} from './NativeExpoMapView';\r\nimport { Platform } from 'react-native';\r\n\r\nexport * from './Maps.types';\r\n\r\ninterface DefaultNativeExpoMapViewProps {\r\n  mapType: 'normal' | 'hybrid' | 'satellite' | 'terrain';\r\n  enableRotateGestures: boolean;\r\n  enableScrollGestures: boolean;\r\n  enableTiltGestures: boolean;\r\n  enableZoomGestures: boolean;\r\n}\r\n\r\nconst defaultNativeExpoMapViewProps: DefaultNativeExpoMapViewProps = {\r\n  mapType: 'normal',\r\n  enableRotateGestures: false,\r\n  enableScrollGestures: true,\r\n  enableTiltGestures: false,\r\n  enableZoomGestures: true,\r\n};\r\n\r\nexport class ExpoMap extends React.Component<ExpoMapViewProps> {\r\n  private mapChildren() {\r\n    const childrenArray = React.Children.map(this.props.children, (child) => {\r\n      if (!isSimpleType(child)) {\r\n        if (instanceOfMarker(child)) {\r\n          return {\r\n            type: 'marker',\r\n            latitude: child.props.latitude,\r\n            longitude: child.props.longitude,\r\n          } as MarkerObject;\r\n        }\r\n      }\r\n      warnIfChildIsIncompatible(child);\r\n      return null;\r\n    });\r\n\r\n    return {\r\n      markers: childrenArray\r\n        ? childrenArray.filter((e) => e.type === 'marker')\r\n        : [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const childrenObj = this.mapChildren();\r\n\r\n    if (Platform.OS == 'ios' && this.props.provider == 'apple') {\r\n      return (\r\n        <NativeExpoAppleMapsView\r\n          {...defaultNativeExpoMapViewProps}\r\n          {...this.props}\r\n          markers={childrenObj.markers}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <NativeExpoGoogleMapsView\r\n        {...defaultNativeExpoMapViewProps}\r\n        {...this.props}\r\n        jsonStyleString={\r\n          this.props.googleMapsJsonStyleString\r\n            ? this.props.googleMapsJsonStyleString\r\n            : ''\r\n        }\r\n        markers={childrenObj.markers}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport class Marker extends React.Component<MarkerProps> {\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction instanceOfMarker(child: any): child is Marker {\r\n  if (\r\n    'type' in child &&\r\n    String(child.type).includes('Marker') &&\r\n    'props' in child\r\n  ) {\r\n    return arePropsKeysEqual(Object.keys(child.props), [\r\n      'latitude',\r\n      'longitude',\r\n    ]);\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction warnIfChildIsIncompatible(child: any) {\r\n  if (\r\n    typeof child == 'string' ||\r\n    typeof child == 'boolean' ||\r\n    typeof child == 'number'\r\n  ) {\r\n    console.warn(\r\n      `Warning! Child of type ${typeof child} isn't valid ExpoMap child!`\r\n    );\r\n  } else if (child != null && child != undefined) {\r\n    console.log(child.type);\r\n    console.warn(\r\n      `Warning! Child of type ${\r\n        (child as React.ReactElement<any>).type\r\n      } isn't valid ExpoMap child!`\r\n    );\r\n  }\r\n}\r\n\r\nfunction isSimpleType(child: any) {\r\n  return (\r\n    typeof child == 'string' ||\r\n    typeof child == 'boolean' ||\r\n    typeof child == 'number' ||\r\n    child == null ||\r\n    child == undefined\r\n  );\r\n}\r\n\r\nfunction arePropsKeysEqual(\r\n  expectedPropsKeys: string[],\r\n  actualPropsKeys: string[]\r\n) {\r\n  return (\r\n    actualPropsKeys.length === expectedPropsKeys.length &&\r\n    actualPropsKeys.every((value, index) => value === expectedPropsKeys[index])\r\n  );\r\n}\r\n"]}
{"version":3,"file":"Maps.js","sourceRoot":"","sources":["../src/Maps.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EACL,uBAAuB,EACvB,wBAAwB,GACzB,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAExC,cAAc,cAAc,CAAC;AAM7B,MAAM,6BAA6B,GAAkC;IACnE,OAAO,EAAE,QAAQ;CAClB,CAAC;AAEF,MAAM,OAAO,OAAQ,SAAQ,KAAK,CAAC,SAA2B;IACpD,WAAW;QACjB,MAAM,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE;YACtE,IAAI,eAAe,CAAC,KAAK,CAAC,EAAE;gBAC1B,IAAI,oBAAoB,CAAC,KAAK,CAAC,EAAE;oBAC/B,OAAO;wBACL,IAAI,EAAE,QAAQ;wBACd,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ;wBACzB,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS;qBACX,CAAC;iBACnB;gBACD,OAAO,IAAI,CAAC;aACb;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,OAAO;YACL,OAAO,EAAE,aAAa;gBACpB,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC;gBAClD,CAAC,CAAC,EAAE;SACP,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAEvC,IAAI,QAAQ,CAAC,EAAE,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,OAAO,EAAE;YAC1D,OAAO,CACL,oBAAC,uBAAuB,OAClB,6BAA6B,KAC7B,IAAI,CAAC,KAAK,EACd,OAAO,EAAE,WAAW,CAAC,OAAO,GAC5B,CACH,CAAC;SACH;QAED,OAAO,CACL,oBAAC,wBAAwB,OACnB,6BAA6B,KAC7B,IAAI,CAAC,KAAK,EACd,eAAe,EACb,IAAI,CAAC,KAAK,CAAC,yBAAyB;gBAClC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,yBAAyB;gBACtC,CAAC,CAAC,EAAE,EAER,OAAO,EAAE,WAAW,CAAC,OAAO,GAC5B,CACH,CAAC;IACJ,CAAC;CACF;AAED,MAAM,OAAO,UAAW,SAAQ,KAAK,CAAC,SAA0B;IAC9D,MAAM;QACJ,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAED,SAAS,oBAAoB,CAAC,MAAW;IACvC,IAAI,OAAO,IAAI,MAAM,EAAE;QACrB,OAAO,gBAAgB,CAAC,CAAC,UAAU,EAAE,WAAW,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;KAClE;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,eAAe,CAAC,QAAa;IACpC,OAAO,CACL,OAAO,QAAQ,IAAI,QAAQ;QAC3B,OAAO,QAAQ,IAAI,SAAS;QAC5B,OAAO,QAAQ,IAAI,QAAQ;QAC3B,QAAQ,IAAI,IAAI;QAChB,QAAQ,IAAI,SAAS,CACtB,CAAC;AACJ,CAAC;AAED,SAAS,gBAAgB,CAAC,iBAA2B,EAAE,KAAa;IAClE,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,OAAO,CACL,SAAS,CAAC,MAAM,KAAK,iBAAiB,CAAC,MAAM;QAC7C,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,KAAK,iBAAiB,CAAC,KAAK,CAAC,CAAC,CACtE,CAAC;AACJ,CAAC","sourcesContent":["import React from 'react';\nimport { ExpoMapViewProps, ExpoMarkerProps, MarkerObject } from './Maps.types';\nimport {\n  NativeExpoAppleMapsView,\n  NativeExpoGoogleMapsView,\n} from './NativeExpoMapView';\nimport { Platform } from 'react-native';\n\nexport * from './Maps.types';\n\ninterface DefaultNativeExpoMapViewProps {\n  mapType: 'normal' | 'hybrid' | 'satellite' | 'terrain';\n}\n\nconst defaultNativeExpoMapViewProps: DefaultNativeExpoMapViewProps = {\n  mapType: 'normal',\n};\n\nexport class ExpoMap extends React.Component<ExpoMapViewProps> {\n  private mapChildren() {\n    const childrenArray = React.Children.map(this.props.children, (child) => {\n      if (isNotSimpleType(child)) {\n        if (instanceOfExpoMarker(child)) {\n          return {\n            type: 'marker',\n            lat: child.props.latitude,\n            lng: child.props.longitude,\n          } as MarkerObject;\n        }\n        return null;\n      }\n      return null;\n    });\n\n    return {\n      markers: childrenArray\n        ? childrenArray.filter((e) => e.type === 'marker')\n        : [],\n    };\n  }\n\n  render() {\n    const childrenObj = this.mapChildren();\n\n    if (Platform.OS == 'ios' && this.props.provider == 'apple') {\n      return (\n        <NativeExpoAppleMapsView\n          {...defaultNativeExpoMapViewProps}\n          {...this.props}\n          markers={childrenObj.markers}\n        />\n      );\n    }\n\n    return (\n      <NativeExpoGoogleMapsView\n        {...defaultNativeExpoMapViewProps}\n        {...this.props}\n        jsonStyleString={\n          this.props.googleMapsJsonStyleString\n            ? this.props.googleMapsJsonStyleString\n            : ''\n        }\n        markers={childrenObj.markers}\n      />\n    );\n  }\n}\n\nexport class ExpoMarker extends React.Component<ExpoMarkerProps> {\n  render() {\n    return null;\n  }\n}\n\nfunction instanceOfExpoMarker(object: any): object is ExpoMarker {\n  if ('props' in object) {\n    return doPropsKeysMatch(['latitude', 'longitude'], object.props);\n  }\n  return false;\n}\n\nfunction isNotSimpleType(instance: any) {\n  return (\n    typeof instance != 'string' &&\n    typeof instance != 'boolean' &&\n    typeof instance != 'number' &&\n    instance != null &&\n    instance != undefined\n  );\n}\n\nfunction doPropsKeysMatch(expectedPropsKeys: string[], props: Object) {\n  const propsKeys = Object.keys(props);\n  return (\n    propsKeys.length === expectedPropsKeys.length &&\n    propsKeys.every((value, index) => value === expectedPropsKeys[index])\n  );\n}\n"]}
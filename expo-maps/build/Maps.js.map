{"version":3,"file":"Maps.js","sourceRoot":"","sources":["../src/Maps.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  ExpoMapViewProps,\n  MarkerProps,\n  MarkerObject,\n  MarkerColor,\n  PolygonProps,\n  PolylineProps,\n  CircleProps,\n  PolygonObject,\n  PolylineObject,\n  CircleObject,\n} from './Maps.types';\nimport { NativeExpoAppleMapsView, NativeExpoGoogleMapsView } from './NativeExpoMapView';\nimport { Asset } from 'expo-asset';\nimport { Platform } from 'react-native';\n\nexport * from './Maps.types';\n\ninterface DefaultNativeExpoMapViewProps {\n  mapType: 'normal' | 'hybrid' | 'satellite' | 'terrain';\n  enableRotateGestures: boolean;\n  enableScrollGestures: boolean;\n  enableTiltGestures: boolean;\n  enableZoomGestures: boolean;\n}\n\nconst defaultNativeExpoMapViewProps: DefaultNativeExpoMapViewProps = {\n  mapType: 'normal',\n  enableRotateGestures: false,\n  enableScrollGestures: true,\n  enableTiltGestures: false,\n  enableZoomGestures: true,\n};\n\nexport class ExpoMap extends React.Component<ExpoMapViewProps> {\n  state = {\n    markers: [],\n    polygons: [],\n    polylines: [],\n    circles: [],\n  };\n\n  componentDidMount() {\n    this.mapChildren();\n  }\n\n  private async mapChildren() {\n    const childrenArray = React.Children.map(this.props.children, async (child) => {\n      if (!isSimpleType(child)) {\n        if (instanceOfMarker(child)) {\n          let iconPath: Asset | undefined = undefined;\n          if (child.props.icon !== undefined) {\n            iconPath = await Asset.fromModule(child.props.icon).downloadAsync();\n          }\n\n          let markerObject = {\n            type: 'marker',\n            latitude: child.props.latitude,\n            longitude: child.props.longitude,\n            title: child.props.title,\n            snippet: child.props.snippet,\n            icon: iconPath?.localUri,\n            defaultMarkerColor: 0,\n            draggable: child.props.draggable ? child.props.draggable : false,\n            anchorU: child.props.anchorU,\n            anchorV: child.props.anchorV,\n            opacity: child.props.opacity ? child.props.opacity : 1,\n          } as MarkerObject;\n\n          if (child.props.defaultMarkerColor != undefined) {\n            if (typeof child.props.defaultMarkerColor === 'number') {\n              markerObject.defaultMarkerColor = child.props.defaultMarkerColor!;\n            } else {\n              markerObject.defaultMarkerColor = mapColor(child.props.defaultMarkerColor);\n            }\n          }\n          return markerObject;\n        } else if (instanceOfPolygon(child)) {\n          return {\n            type: 'polygon',\n            points: child.props.points,\n            fillColor: child.props.fillColor,\n            strokeColor: child.props.strokeColor,\n            strokeWidth: child.props.strokeWidth,\n            strokePattern: child.props.strokePattern,\n            jointType: child.props.jointType,\n          } as PolygonObject;\n        } else if (instanceOfPolyline(child)) {\n          return {\n            type: 'polyline',\n            points: child.props.points,\n            color: child.props.color,\n            width: child.props.width,\n            pattern: child.props.pattern,\n            jointType: child.props.jointType,\n            capType: child.props.capType,\n          } as PolylineObject;\n        } else if (instanceOfCircle(child)) {\n          return {\n            type: 'circle',\n            center: child.props.center,\n            radius: child.props.radius,\n            fillColor: child.props.fillColor,\n            strokeColor: child.props.strokeColor,\n            strokeWidth: child.props.strokeWidth,\n          } as CircleObject;\n        }\n      }\n      warnIfChildIsIncompatible(child);\n      return null;\n    });\n\n    if (childrenArray != undefined) {\n      let propObjects = await Promise.all(childrenArray);\n      this.setState({\n        markers: propObjects.filter((elem) => elem?.type === 'marker'),\n        polygons: propObjects.filter((elem) => elem?.type === 'polygon'),\n        polylines: propObjects.filter((elem) => elem?.type === 'polyline'),\n        circles: propObjects.filter((elem) => elem?.type === 'circle'),\n      });\n    }\n  }\n\n  render() {\n    if (Platform.OS == 'ios' && this.props.provider == 'apple') {\n      return (\n        <NativeExpoAppleMapsView\n          {...defaultNativeExpoMapViewProps}\n          {...this.props}\n          markers={this.state.markers}\n          polygons={this.state.polygons}\n          polylines={this.state.polylines}\n          circles={this.state.circles}\n        />\n      );\n    }\n\n    return (\n      <NativeExpoGoogleMapsView\n        {...defaultNativeExpoMapViewProps}\n        {...this.props}\n        jsonStyleString={this.props.googleMapsJsonStyleString ? this.props.googleMapsJsonStyleString : ''}\n        markers={this.state.markers}\n        polygons={this.state.polygons}\n        polylines={this.state.polylines}\n        circles={this.state.circles}\n      />\n    );\n  }\n}\n\nexport class Marker extends React.Component<MarkerProps> {\n  render() {\n    return null;\n  }\n}\n\nfunction mapColor(color: MarkerColor): number {\n  switch (color) {\n    case 'azure': {\n      return 210;\n    }\n    case 'blue': {\n      return 240;\n    }\n    case 'cyan': {\n      return 180;\n    }\n    case 'green': {\n      return 120;\n    }\n    case 'magenta': {\n      return 300;\n    }\n    case 'orange': {\n      return 30;\n    }\n    case 'rose': {\n      return 330;\n    }\n    case 'violet': {\n      return 270;\n    }\n    case 'yellow': {\n      return 60;\n    }\n  }\n  return 0;\n}\n\nfunction instanceOfMarker(child: any): child is Marker {\n  if ('type' in child && String(child.type).includes('Marker') && 'props' in child) {\n    let props = Object.keys(child.props);\n    if (props.includes('latitude') && props.includes('longitude')) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class Polygon extends React.Component<PolygonProps> {\n  render() {\n    return null;\n  }\n}\n\nfunction instanceOfPolygon(child: any): child is Polygon {\n  if ('type' in child && String(child.type).includes('Polygon') && 'props' in child) {\n    let props = Object.keys(child.props);\n    if (props.includes('points')) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class Polyline extends React.Component<PolylineProps> {\n  render() {\n    return null;\n  }\n}\n\nfunction instanceOfPolyline(child: any): child is Polyline {\n  if ('type' in child && String(child.type).includes('Polyline') && 'props' in child) {\n    let props = Object.keys(child.props);\n    if (props.includes('points')) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class Circle extends React.Component<CircleProps> {\n  render() {\n    return null;\n  }\n}\n\nfunction instanceOfCircle(child: any): child is Circle {\n  if ('type' in child && String(child.type).includes('Circle') && 'props' in child) {\n    let props = Object.keys(child.props);\n    if (props.includes('center') && props.includes('radius')) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction warnIfChildIsIncompatible(child: any) {\n  if (typeof child == 'string' || typeof child == 'boolean' || typeof child == 'number') {\n    console.warn(`Warning! Child of type ${typeof child} isn't valid ExpoMap child!`);\n  } else if (child != null && child != undefined) {\n    console.log(child.type);\n    console.warn(`Warning! Child of type ${(child as React.ReactElement<any>).type} isn't valid ExpoMap child!`);\n  }\n}\n\nfunction isSimpleType(child: any) {\n  return (\n    typeof child == 'string' ||\n    typeof child == 'boolean' ||\n    typeof child == 'number' ||\n    child == null ||\n    child == undefined\n  );\n}\n"]}
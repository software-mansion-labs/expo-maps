{"version":3,"file":"Map.types.js","sourceRoot":"","sources":["../src/Map.types.ts"],"names":[],"mappings":"","sourcesContent":["import { ViewProps } from 'react-native';\nimport { PropsWithChildren } from 'react';\nimport { MarkerObject } from './Marker';\nimport { PolygonObject } from './Polygon';\nimport { PolylineObject } from './Polyline';\nimport { CircleObject } from './Circle';\n\nexport type MapTypes = 'normal' | 'hybrid' | 'satellite' | 'terrain';\n\n/**\n * Prop for managing map type.\n *\n * @field mapType - type of map (one of normal, hybrid, satellite, terrain')\n */\nexport type MapType = {\n  mapType: MapTypes;\n};\n\n/**\n * Internal prop for managing markers displayed on the map.\n *\n * @field markers - array of MarkerObjects\n */\nexport type Markers = {\n  markers: MarkerObject[];\n};\n\n/**\n * Internal prop for managing polygons displayed on the map.\n *\n * @field polygons - array of PolygonObjects\n */\nexport type Polygons = {\n  polygons: PolygonObject[];\n};\n\n/**\n * Internal prop for managing polylines displayed on the map.\n *\n * @field polylines - array of PolylineObjects\n */\nexport type Polylines = {\n  polylines: PolylineObject[];\n};\n\n/**\n * Internal prop for managing circles displayed on the map.\n *\n * @field circles - array of CircleObjects\n */\nexport type Circles = {\n  circles: CircleObject[];\n};\n\n/**\n * Prop for managing Google Maps styling settings.\n *\n * @googleMapsfield googleMapsJsonStyleString - valid Google Maps style JSON string,\n * please use https://mapstyle.withgoogle.com to generate style JSONs\n */\nexport type GoogleMapsStyling = {\n  googleMapsJsonStyleString: string;\n};\n\n/**\n * Props for managing map gestures settings.\n *\n * @field enableRotateGestures - if `true` rotate gestures are enabled\n *\n * @field enableScrollGestures - if `true` scroll gestures are enabled\n *\n * @field enableTiltGestures - if `true` tilt gestures are enabled\n *\n * @field enableZoomGestures - if `true` zoom gestures are enabled\n */\nexport type Gestures = {\n  enableRotateGestures: boolean;\n  enableScrollGestures: boolean;\n  enableTiltGestures: boolean;\n  enableZoomGestures: boolean;\n};\n\n/**\n * Props for managing map controls settings.\n *\n * @googleMapsfield showZoomControls - if `true` zoom controls are visable\n *\n * @field showCompass - if `true` compass icon is visable\n *\n * @googleMapsfield showMapToolbar - if `true` map toolbar is visable\n *\n * @field showLevelPicker - if `true` level picker is visable when avaliable\n */\nexport type Controls = {\n  showZoomControls: boolean;\n  showCompass: boolean;\n  showMapToolbar: boolean;\n  showMyLocationButton: boolean;\n  showLevelPicker: boolean;\n};\n\ntype GoogleMapsControls = Controls;\n\ntype AppleMapsControls = Omit<\n  Controls,\n  'showMapToolbar' | 'showZoomControls'\n>;\n\nexport type NativeExpoGoogleMapsViewProps = ViewProps &\n  PropsWithChildren<\n    MapType &\n      GoogleMapsStyling &\n      Gestures &\n      Markers &\n      Polygons &\n      Polylines &\n      Circles &\n      GoogleMapsControls\n  >;\n\nexport type NativeExpoAppleMapsViewProps = ViewProps &\n  PropsWithChildren<\n    MapType &\n      Gestures &\n      Markers &\n      Polygons &\n      Polylines &\n      Circles &\n      AppleMapsControls\n  >;\n\nexport type Providers = 'google' | 'apple';\n\n/**\n * Prop for managing map provider.\n *\n * @field provider - provider you want to use for your map, please note `apple` provider is only avaliable on Apple devices,\n * if `apple` provider is selected on Android device it is ignored\n */\nexport type Provider = {\n  provider: Providers;\n};\n\n/**\n * General Expo Map props.\n *\n * All of the ExpoMap props are optional, if prop is not explicitly specified default will be used.\n *\n * @field mapType - type of map (one of normal, hybrid, satellite, terrain')\n * @default 'normal'\n *\n * @googleMapsfield googleMapsJsonStyleString - valid Google Maps style JSON string,\n * please use https://mapstyle.withgoogle.com to generate style JSONs\n * @default undefined\n *\n * @field enableRotateGestures - if `true` rotate gestures are enabled\n * @default false\n *\n * @field enableScrollGestures - if `true` scroll gestures are enabled\n * @default true\n *\n * @field enableTiltGestures - if `true` tilt gestures are enabled\n * @default false\n *\n * @field enableZoomGestures - if `true` zoom gestures are enabled\n * @default true\n *\n * TODO more explanations on how zoom controls function\n * @googleMapsfield showZoomControls - if `true` zoom controls are visable\n * @default true\n *\n * @field showCompass - if `true` compass icon is visable\n * @default true\n *\n * @googleMapsfield showMapToolbar - if `true` map toolbar is visable\n * @default true\n *\n * @field showLevelPicker - if `true` level picker is visable when avaliable\n * @default true\n *\n * @field provider - provider you want to use for your map, please note `apple` provider is only avaliable on Apple devices,\n * if `apple` provider is selected on Android device it is ignored\n * @default 'google'\n*/\nexport type ExpoMapViewProps = ViewProps &\n  PropsWithChildren<\n    Partial<Provider & MapType & Controls & GoogleMapsStyling & Gestures>\n  >;\n\nexport type DefaultNativeExpoMapViewProps = MapType & Controls & Gestures;\n\nexport type ExpoMapState = Markers & Polygons & Polylines & Circles;\n"]}
{"version":3,"file":"Map.types.js","sourceRoot":"","sources":["../src/Map.types.ts"],"names":[],"mappings":"","sourcesContent":["import { ViewProps } from 'react-native';\nimport { PropsWithChildren } from 'react';\nimport { MarkerObject } from './Marker';\nimport { PolygonObject } from './Polygon';\nimport { PolylineObject } from './Polyline';\nimport { CircleObject } from './Circle';\n\nexport type MapTypes = 'normal' | 'hybrid' | 'satellite' | 'terrain';\n\n/**\n * Prop for managing map type.\n */\nexport type MapType = {\n  /**\n   * Type of map (one of normal, hybrid, satellite, terrain').\n   *\n   * @default 'normal'\n   */\n  mapType: MapTypes;\n};\n\n/**\n * Internal prop for managing markers displayed on the map.\n */\nexport type Markers = {\n  /**\n   * Array of {@link MarkerObject}.\n   */\n  markers: MarkerObject[];\n};\n\n/**\n * Internal prop for managing polygons displayed on the map.\n */\nexport type Polygons = {\n  /**\n   * Array of {@link PolygonObject}.\n   */\n  polygons: PolygonObject[];\n};\n\n/**\n * Internal prop for managing polylines displayed on the map.\n */\nexport type Polylines = {\n  /**\n   * Array of {@link PolylineObject}.\n   */\n  polylines: PolylineObject[];\n};\n\n/**\n * Internal prop for managing circles displayed on the map.\n */\nexport type Circles = {\n  /**\n   * Array of {@link CircleObject}.\n   */\n  circles: CircleObject[];\n};\n\n/**\n * Prop for managing Google Maps styling settings.\n */\nexport type GoogleMapsStyling = {\n  /**\n   * Valid Google Maps style JSON string,\n   * please use https://mapstyle.withgoogle.com to generate style JSONs.\n   *\n   * This prop works only when provider == `google`.\n   */\n  googleMapsJsonStyleString: string;\n};\n\n/**\n * Props for managing map gestures settings.\n */\nexport type Gestures = {\n  /**\n   * If `true` rotate gestures are enabled.\n   *\n   * @default false\n   */\n  enableRotateGestures: boolean;\n  /**\n   * If `true` scroll gestures are enabled.\n   *\n   * @default true\n   */\n  enableScrollGestures: boolean;\n  /**\n   * If `true` tilt gestures are enabled.\n   *\n   * @default false\n   */\n  enableTiltGestures: boolean;\n  /**\n   * If `true` zoom gestures are enabled.\n   *\n   * @default true\n   */\n  enableZoomGestures: boolean;\n};\n\n/**\n * Props for managing map controls settings.\n */\nexport type Controls = {\n  /**\n   * If `true` zoom controls are visible.\n   *\n   * This prop works only when provider == `google`.\n   *\n   * @default true\n   */\n  showZoomControls: boolean;\n  /**\n   * If `true` compass icon can be visible.\n   *\n   * It appears only when map is moved so that it is not facing north.\n   *\n   * @default true\n   */\n  showCompass: boolean;\n  /**\n   * If `true` map toolbar can be visible.\n   *\n   * It is visible when a marker is tapped and hidden when the marker is no longer in focus.\n   *\n   * This prop works only when provider == `google`.\n   *\n   * @default true\n   */\n  showMapToolbar: boolean;\n  /**\n   * If `true` map toolbar can be visible.\n   *\n   * It is visble when map can access user location.\n   *\n   * @default true\n   */\n  showMyLocationButton: boolean;\n  /**\n   * TODO when functionality fully added\n   *\n   * @default true\n   */\n  showLevelPicker: boolean;\n};\n\ntype GoogleMapsControls = Controls;\n\ntype AppleMapsControls = Omit<\n  Controls,\n  'showMapToolbar' | 'showZoomControls'\n>;\n\n/**\n * Props for Google Maps implementation.\n */\nexport type NativeExpoGoogleMapsViewProps = ViewProps &\n  PropsWithChildren<\n    MapType &\n      GoogleMapsStyling &\n      Gestures &\n      Markers &\n      Polygons &\n      Polylines &\n      Circles &\n      GoogleMapsControls\n  >;\n\n/**\n * Props for Apple Maps implementation.\n */\n  export type NativeExpoAppleMapsViewProps = ViewProps &\n  PropsWithChildren<\n    MapType &\n      Gestures &\n      Markers &\n      Polygons &\n      Polylines &\n      Circles &\n      AppleMapsControls\n  >;\n\nexport type Providers = 'google' | 'apple';\n\n/**\n * Prop for managing map provider.\n */\nexport type Provider = {\n  /**\n   * Provider you want to use for your map, please note `apple` provider is only avaliable on Apple devices.\n   *\n   * @default 'google'\n   */\n  provider: Providers;\n};\n\n/**\n * General Expo Map props.\n *\n * All of the ExpoMap props are optional.\n*/\nexport type ExpoMapViewProps = ViewProps &\n  PropsWithChildren<\n    Partial<Provider & MapType & Controls & GoogleMapsStyling & Gestures>\n  >;\n\nexport type DefaultNativeExpoMapViewProps = MapType & Controls & Gestures;\n\nexport type ExpoMapState = Markers & Polygons & Polylines & Circles;\n"]}
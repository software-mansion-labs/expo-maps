{"version":3,"file":"Polyline.js","sourceRoot":"","sources":["../src/Polyline.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAoE1B;;GAEG;AACH,MAAM,OAAO,QAAS,SAAQ,KAAK,CAAC,SAAwB;IAC1D,MAAM;QACJ,OAAO,IAAI,CAAC;IACd,CAAC;CACF","sourcesContent":["import React from 'react';\r\nimport { Point, PatternItem } from './Common.types';\r\nimport { PolygonProps } from './Polygon';\r\n\r\n/**\r\n * Props of Polyline component of Expo Maps library.\r\n */\r\nexport type PolylineProps = {\r\n  /**\r\n   * Array of polygon's vertices.\r\n   * \r\n   * If empty, the polyline will be invisible, but logically it will be registered on the host map.\r\n   * @required\r\n   */\r\n  points: Point[];\r\n  /**\r\n   * Polyline stroke color in hex format (optional).\r\n   * \r\n   * Accepted formats:\r\n   * * `'#RRGGBB'`\r\n   * * `'#RRGGBBAA'`\r\n   * * `'#RGB'`\r\n   * * `'#RGBA'`\r\n   * @default '#000'\r\n   */\r\n  color?: string;\r\n  /**\r\n   * Polyline stroke width in pixels.\r\n   */\r\n  width?: number;\r\n  /**\r\n   * Array of objects of type PatternItem, specifying the pattern of the polyline's edge line (optional).\r\n   * \r\n   * * Unprovided will imply a solid line.\r\n   * * Empty array will imply no visible line.\r\n   * * Otherwise line pattern starts with first provided element and repeats.\r\n   * \r\n   * For detailed info see {@link PatternItem}\r\n   */\r\n  pattern?: PatternItem[];\r\n  /**\r\n   * Style of joints between polyline's line segments (optional).\r\n   * * `'bevel'` - beveled joints between line segments\r\n   * * `'miter'` - sharp joints between line segments\r\n   * * `'round'` - rounded joints between line segments\r\n   * @default 'miter'\r\n   */\r\n  jointType?: 'bevel' | 'miter' | 'round';\r\n  /**\r\n   * Style if polyline's line endings (optional).\r\n   * * `'butt'` - line ends are squared off exactly at the end point\r\n   * * `'round'` - line ends are rounded with a center point at the end point\r\n   * * `'square'` - line ends are enlongated by half the stroke width and squared off\r\n   * @default 'butt'\r\n   */\r\n  capType?: 'butt' | 'round' | 'square';\r\n};\r\n\r\n/**\r\n * Internal JSON object for representing polylines in Expo Maps library.\r\n *\r\n * See `PolylineProps` for more detail.\r\n */\r\nexport type PolylineObject = {\r\n  type: 'polyline';\r\n  points: Point[];\r\n};\r\n\r\n/**\r\n * Represents a polyline on the map.\r\n */\r\nexport class Polyline extends React.Component<PolylineProps> {\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n"]}